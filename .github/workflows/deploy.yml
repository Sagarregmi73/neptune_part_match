name: Build & Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Build and deploy Docker on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
PROJECT_DIR="/home/ec2-user/neptune_part_match"
if [ ! -d "$PROJECT_DIR" ]; then
  git clone https://github.com/Sagarregmi73/neptune_part_match.git $PROJECT_DIR
fi
cd $PROJECT_DIR
git reset --hard
git pull
docker build -t $DOCKER_IMAGE .
RUNNING_CONTAINER=$(docker ps -q --filter "ancestor=$DOCKER_IMAGE")
if [ ! -z "$RUNNING_CONTAINER" ]; then
  docker stop $RUNNING_CONTAINER
  docker rm $RUNNING_CONTAINER
fi
OLD_IMAGES=$(docker images -q "$DOCKER_IMAGE")
if [ ! -z "$OLD_IMAGES" ]; then
  docker rmi -f $OLD_IMAGES
fi
docker run -d -p 8443:8000 --name $DOCKER_IMAGE $DOCKER_IMAGE
EOF
