  name: Deploy Docker on EC2
  env:
    EC2_HOST: ${{ secrets.EC2_HOST }}
    EC2_USER: ${{ secrets.EC2_USER }}
    DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  run: |
    ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa "${EC2_USER}@${EC2_HOST}" \
    "PROJECT_DIR='/home/ec2-user/neptune_part_match' \
     CONTAINER_NAME='neptune_app' \
     DOCKER_IMAGE='${DOCKER_IMAGE}' \
     bash -s" << 'EOF'
      set -euo pipefail

      echo "Project directory: $PROJECT_DIR"
      echo "Docker image: $DOCKER_IMAGE"

      # Clone if missing
      if [ ! -d "$PROJECT_DIR/.git" ]; then
        git clone https://github.com/Sagarregmi73/neptune_part_match.git "$PROJECT_DIR"
      fi

      cd "$PROJECT_DIR"
      git fetch origin main
      git reset --hard origin/main

      # Check Dockerfile exists
      if [ ! -f Dockerfile ]; then
        echo "ERROR: Dockerfile not found"
        exit 1
      fi

      # Build Docker image
      docker build -t "$DOCKER_IMAGE" .

      # Stop old container
      if docker ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
        docker stop "$CONTAINER_NAME" || true
        docker rm "$CONTAINER_NAME" || true
      fi

      docker image prune -f
      docker run -d -p 8443:8000 --name "$CONTAINER_NAME" "$DOCKER_IMAGE"
    EOF

