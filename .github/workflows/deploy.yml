- name: Deploy Docker on EC2
  env:
    EC2_HOST: ${{ secrets.EC2_HOST }}
    EC2_USER: ${{ secrets.EC2_USER }}
    DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ${{ secrets.AWS_REGION }}
    S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  run: |
    ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa "${EC2_USER}@${EC2_HOST}" \
    "PROJECT_DIR='/home/ec2-user/neptune_part_match' \
     CONTAINER_NAME='neptune_app' \
     DOCKER_IMAGE='${DOCKER_IMAGE}' \
     bash -s" << 'EOF'
      set -euo pipefail

      cd "$PROJECT_DIR"
      git fetch origin main
      git reset --hard origin/main

      docker build -t "$DOCKER_IMAGE" .

      if docker ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
        docker stop "$CONTAINER_NAME" || true
        docker rm "$CONTAINER_NAME" || true
      fi

      docker image prune -f

      # Run container with secrets injected
      docker run -d -p 8443:8000 \
        -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
        -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
        -e AWS_REGION="${AWS_REGION}" \
        -e S3_BUCKET_NAME="${S3_BUCKET_NAME}" \
        --name "$CONTAINER_NAME" "$DOCKER_IMAGE"
    EOF
